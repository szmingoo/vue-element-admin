{"remainingRequest":"D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\vue-element-admin\\src\\views\\test\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\vue-element-admin\\src\\views\\test\\index.vue","mtime":1670141788361},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZGljdERldGFpbExpc3QsYXV0b1Rlc3R9IGZyb20gJ0AvYXBpL2ludGVyZmFjZScgICAvLyDlvJXlhaXosIPnlKhhcGkKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkb21haW5zOiBbewogICAgICAgIHZhbHVlOiAnJwogICAgICB9XSwKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIHRvdGFsOiAwLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgbGlzdFF1ZXJ5OiB7CiAgICAgICAgbmFtZTogdW5kZWZpbmVkLAogICAgICB9LAogICAgICBwYWdlSW5mbzogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDEwMAogICAgICB9LAogICAgICBEaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgZGljdERldGFpbExpc3QodGhpcy5saXN0UXVlcnksIHRoaXMucGFnZUluZm8pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEucmVjb3JkcwogICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsCiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgICB9LCAxICogMTAwMCkKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVGaWx0ZXIoKSB7CiAgICAgIHRoaXMucGFnZUluZm8ucGFnZSA9IDEKICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICByZXNldFRlbXAoKSB7CiAgICAgIHRoaXMudGVtcCA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVRlc3Qocm93KSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ+aYr+WQpuehruWumuiHquWKqOa1i+ivleivpea0u+WKqD8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgIH0pLnRoZW4oYXN5bmMgKCkgPT4gewogICAgICAgIGF3YWl0IGF1dG9UZXN0KHsiaWQiOnJvdy5pZH0pOwogICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uoe3R5cGU6ICdzdWNjZXNzJywgbWVzc2FnZTogJ+eojeWQjuWwhuS8muWcqOS8geS4muW+ruS/oee+pOiBiuS4reWPkemAgea1i+ivleaKpeWRiu+8gSd9KQogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7dHlwZTogJ3N1Y2Nlc3MnLCBtZXNzYWdlOiAn5bey5Y+W5raI5rWL6K+VJ30pCiAgICAgIH0pCiAgICB9LAogICAganVtcCAocm93KSB7CiAgICAgIGxldCBQYXRoID0gJ2h0dHA6Ly8xMjEuNC4yNTQuMTYwL3JlcG9ydC9hcGlmb3gtcmVwb3J0Lmh0bWwnOwogICAgICB3aW5kb3cub3BlbihQYXRoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/test","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-row>\n        <el-col align=\"left\" :span=\"16\">\n          <el-input v-model=\"listQuery.name\" placeholder=\"活动名称\" style=\"width: 250px; \" size=\"small\"/>\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\"\n                     @click=\"handleFilter\">查询\n          </el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row\n              style=\"width: 100%; margin-top: 10px;\">\n      <el-table-column label=\"序号\" type=\"index\" :index=\"typeIndex\" width=\"100\"  align=\"center\"/>\n      <el-table-column label=\"活动名称\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"执行次数\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.count }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleTest(row)\" plain>执行测试</el-button>\n          <el-button type=\"success\" size=\"small\" @click=\"jump(row)\" plain>查看报告</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\n  import {dictDetailList,autoTest} from '@/api/interface'   // 引入调用api\n  export default {\n    data() {\n      return {\n        domains: [{\n          value: ''\n        }],\n        tableKey: 0,\n        list: null,\n        total: 0,\n        listLoading: true,\n        listQuery: {\n          name: undefined,\n        },\n        pageInfo: {\n          page: 1,\n          limit: 100\n        },\n        DialogVisible: false,\n      }\n    },\n    created() {\n      this.getList()\n    },\n    methods: {\n      getList() {\n        this.listLoading = true\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\n          this.list = response.data.records\n          this.total = response.data.total\n          setTimeout(() => {\n            this.listLoading = false\n          }, 1 * 1000)\n        })\n      },\n      handleFilter() {\n        this.pageInfo.page = 1\n        this.getList()\n      },\n      resetTemp() {\n        this.temp = {\n          name: '',\n        }\n      },\n      handleTest(row) {\n        this.$confirm('是否确定自动测试该活动?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'info',\n        }).then(async () => {\n          await autoTest({\"id\":row.id});\n          this.getList();\n          this.$message({type: 'success', message: '稍后将会在企业微信群聊中发送测试报告！'})\n        }).catch(() => {\n          this.$message({type: 'success', message: '已取消测试'})\n        })\n      },\n      jump (row) {\n        let Path = 'http://121.4.254.160/report/apifox-report.html';\n        window.open(Path)\n      }\n    }\n  }\n</script>\n"]}]}