{"remainingRequest":"C:\\CODE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\CODE\\vue-element-admin\\src\\views\\interface\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\CODE\\vue-element-admin\\src\\views\\interface\\index.vue","mtime":1635768894669},{"path":"C:\\CODE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\CODE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\CODE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\CODE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRpY3REZXRhaWxMaXN0LCBjcmVhdGVEaWN0RGV0YWlsLCB1cGRhdGVEaWN0RGV0YWlsLCBkZWxldGVEaWN0RGV0YWlsIH0gZnJvbSAnQC9hcGkvaW50ZXJmYWNlJyAgIC8vIOW8leWFpeiwg+eUqGFwaQppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbicgLy8gc2Vjb25kYXJ5IHBhY2thZ2UgYmFzZWQgb24gZWwtcGFnaW5hdGlvbgoKY29uc3Qgc2VsZWN0T3B0aW9ucyA9IFsKICB7IGtleTogMCwgZGlzcGxheV9uYW1lOiAncHV0JyB9LAogIHsga2V5OiAxLCBkaXNwbGF5X25hbWU6ICdnZXQnIH0sCiAgeyBrZXk6IDIsIGRpc3BsYXlfbmFtZTogJ3Bvc3QnIH0sCiAgeyBrZXk6IDMsIGRpc3BsYXlfbmFtZTogJ2RlbGV0ZScgfSwKXQpjb25zdCBzdGF0dXNUeXBlS2V5VmFsdWUgPSBzZWxlY3RPcHRpb25zLnJlZHVjZSgoYWNjLCBjdXIpID0+IHsKICBhY2NbY3VyLmtleV0gPSBjdXIuZGlzcGxheV9uYW1lCiAgcmV0dXJuIGFjYwp9LCB7fSkKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGljdERldGFpbFRhYmxlJywKICBjb21wb25lbnRzOiB7IFBhZ2luYXRpb24gfSwgIC8vIOWIhumhtQogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcih0eXBlKSB7ICAgIC8vIOexu+S8vG1hcAogICAgICByZXR1cm4gc3RhdHVzVHlwZUtleVZhbHVlW3R5cGVdCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IG51bGwsICAgLy8gdGFibGUgbGlzdAogICAgICB0b3RhbDogMCwJCS8vIOaAu+aVsAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwgLy8g5oeS5Yqg6L29CiAgICAgIGxpc3RRdWVyeTogeyAgIC8v5p+l6K+i5p2h5Lu2CiAgICAgICAgbmFtZSA6IHVuZGVmaW5lZCwKICAgICAgfSwKICAgICAgcGFnZUluZm86IHsgICAvL+WIhumhteWvueixoQogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDEwCiAgICAgIH0sCiAgICAgIHNlbGVjdE9wdGlvbnMsIC8v54q25oCBCiAgICAgIHRlbXA6IHsgIC8v5paw5aKeL+S/ruaUuXRlbXAKICAgICAgICBpZDogdW5kZWZpbmVkLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHVybDonJywKICAgICAgICBkYXRhOicnLAogICAgICAgIG1ldGhvZDonJwogICAgICB9LAogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsICAvL+aWsOWinuS/ruaUueW8ueWHuuahhgogICAgICBkaWFsb2dTdGF0dXM6ICcnLAkgIC8v5by55Ye65qGGIOaYvuekuumakOiXj+aOp+WItgogICAgICB0ZXh0TWFwOiB7CiAgICAgICAgdXBkYXRlOiAn5L+u5pS5JywKICAgICAgICBjcmVhdGU6ICfmlrDlop4nCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7ICAgIC8v5paw5aKe5L+u5pS55L+d5a2Y5pe2IOagoemqjOinhOWImQogICAgICAgIHVybDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfmjqXlj6PlnLDlnYDkuI3og73kuLrnqbonLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgZGF0YTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fmsYLmlbDmja7kuI3og73kuLrnqbonLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgbWV0aG9kOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+axguaWueazleS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBuYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+aOpeWPo+WQjeensOS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsgIC8v5omT5byA55WM6Z2i5omn6KGM5Yqo5L2cCiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgdHlwZUluZGV4KGluZGV4KSB7ICAvLyDluo/lj7cKICAgICAgcmV0dXJuIChpbmRleCArIDEpICsgKHRoaXMucGFnZUluZm8ucGFnZSAtIDEpICogdGhpcy5wYWdlSW5mby5saW1pdAogICAgfSwKICAgIGdldExpc3QoKSB7ICAvL+afpeivouWIhumhtQogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICBkaWN0RGV0YWlsTGlzdCh0aGlzLmxpc3RRdWVyeSwgdGhpcy5wYWdlSW5mbykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5yZWNvcmRzCiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWwKCiAgICAgICAgLy8gSnVzdCB0byBzaW11bGF0ZSB0aGUgdGltZSBvZiB0aGUgcmVxdWVzdAogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgfSwgMSAqIDEwMDApCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRmlsdGVyKCkgeyAvLyDmn6Xor6Lov4fmu6QKICAgICAgdGhpcy5wYWdlSW5mby5wYWdlID0gMQogICAgICB0aGlzLmdldExpc3QoKQogICAgfSwKICAgIGhhbmRsZUNyZWF0ZSgpIHsgICAvLyDngrnlh7vmlrDlop7mk43kvZwKICAgICAgdGhpcy5yZXNldFRlbXAoKQogICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICdjcmVhdGUnCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLmNsZWFyVmFsaWRhdGUoKQogICAgICB9KQogICAgfSwKICAgIGNyZWF0ZURhdGEoKSB7ICAgLy8g5omn6KGM5ZCO56uvIOaWsOWinuaWueazlQogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgY3JlYXRlRGljdERldGFpbCh0aGlzLnRlbXApLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICBpZihyZXMuY29kZT09MjAwKXsKICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7IHRpdGxlOiAn5paw5aKeJywgbWVzc2FnZTogJ+aWsOWinuaIkOWKnyEnLCB0eXBlOiAnc3VjY2VzcycsIGR1cmF0aW9uOiAyMDAwIH0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVVwZGF0ZShyb3cpIHsgIC8vIOeCueWHu+S/ruaUueaTjeS9nAogICAgICB0aGlzLnRlbXAgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpIC8vIGNvcHkgb2JqCiAgICAgIHRoaXMuZGlhbG9nU3RhdHVzID0gJ3VwZGF0ZScKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10uY2xlYXJWYWxpZGF0ZSgpCiAgICAgIH0pCiAgICB9LAogICAgdXBkYXRlRGF0YSgpIHsgICAvLyDmiafooYzlkI7nq68g5L+u5pS55pa55rOVCiAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBjb25zdCB0ZW1wRGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMudGVtcCkKICAgICAgICAgIHVwZGF0ZURpY3REZXRhaWwodGVtcERhdGEpLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICBpZihyZXMuY29kZT09MjAwKXsKICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7IHRpdGxlOiAn5L+u5pS5JywgbWVzc2FnZTogJ+S/ruaUueaIkOWKnycsIHR5cGU6ICdzdWNjZXNzJywgZHVyYXRpb246IDIwMDAgfSkKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRGVsZXRlKHJvdykgeyAvLyDmiafooYzlkI7nq68g5Yig6Zmk5pa55rOVCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+S9oOehruWumuimgeWIoOmZpOivpeS/oeaBrywg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKGFzeW5jKCkgPT4gewogICAgICAgIGF3YWl0IGRlbGV0ZURpY3REZXRhaWwocm93LmlkKQogICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7IHR5cGU6ICdzdWNjZXNzJywgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnIH0pCiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsgdHlwZTogJ3N1Y2Nlc3MnLCBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJyB9KQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/views/interface","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 查询条件 -->\n    <div class=\"filter-container\">\n      <el-row>\n        <el-col align=\"left\" :span=\"8\">\n          <el-button type=\"primary add_btn height32\" icon=\"el-icon-circle-plus-outline\" size=\"small\" @click=\"handleCreate\">\n            新增\n          </el-button>\n        </el-col>\n        <el-col align=\"right\" :span=\"16\">\n          <el-input v-model=\"listQuery.name\" placeholder=\"接口名称\" style=\"width: 200px; margin-left: 10px;\" size=\"small\" />\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\" @click=\"handleFilter\">\n            查询\n          </el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 显示数据列表 -->\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row style=\"width: 100%; margin-top: 10px;\">\n      <el-table-column label=\"接口名称\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"接口地址\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.url }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"请求方法\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.method }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"请求数据\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.data}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleUpdate(row)\" plain>\n            编辑\n          </el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(row)\" plain>\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 页标 -->\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"pageInfo.page\" :limit.sync=\"pageInfo.limit\" @pagination=\"getList\" />\n    <!-- 新增-修改 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"接口名称\" prop=\"name\" placeholder=\"请输入接口名称\" size=\"small\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n      </el-form>\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"接口地址\" prop=\"url\" placeholder=\"请选择接口地址\" size=\"small\">\n          <el-input v-model=\"temp.url\" />\n        </el-form-item>\n      </el-form>\n      <el-form label=\"请求方法\" prop=\"method\">\n        <el-select v-model=\"temp.method\" class=\"filter-item\" placeholder=\"请选择请求方法\" style=\"width:100%\" size=\"small\">\n          <el-option v-for=\"item in selectOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" />\n        </el-select>\n      </el-form>\n      <el-form label=\"请求数据\" size=\"small\">\n        <el-input v-model=\"temp.data\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\" />\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" size=\"small\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          保存\n        </el-button>\n        <el-button size=\"small\" @click=\"dialogFormVisible = false\">\n          关闭\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import { dictDetailList, createDictDetail, updateDictDetail, deleteDictDetail } from '@/api/interface'   // 引入调用api\n  import Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\n  const selectOptions = [\n    { key: 0, display_name: 'put' },\n    { key: 1, display_name: 'get' },\n    { key: 2, display_name: 'post' },\n    { key: 3, display_name: 'delete' },\n  ]\n  const statusTypeKeyValue = selectOptions.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name\n    return acc\n  }, {})\n\n  export default {\n    name: 'DictDetailTable',\n    components: { Pagination },  // 分页\n    filters: {\n      statusFilter(type) {    // 类似map\n        return statusTypeKeyValue[type]\n      }\n    },\n    data() {\n      return {\n        tableKey: 0,\n        list: null,   // table list\n        total: 0,\t\t// 总数\n        listLoading: true, // 懒加载\n        listQuery: {   //查询条件\n          name : undefined,\n        },\n        pageInfo: {   //分页对象\n          page: 1,\n          limit: 10\n        },\n        selectOptions, //状态\n        temp: {  //新增/修改temp\n          id: undefined,\n          name: '',\n          url:'',\n          data:'',\n          method:''\n        },\n        dialogFormVisible: false,  //新增修改弹出框\n        dialogStatus: '',\t  //弹出框 显示隐藏控制\n        textMap: {\n          update: '修改',\n          create: '新增'\n        },\n        rules: {    //新增修改保存时 校验规则\n          url: [{ required: true, message: '接口地址不能为空', trigger: 'blur' }],\n          data: [{ required: true, message: '请求数据不能为空', trigger: 'blur' }],\n          method: [{ required: true, message: '请求方法不能为空', trigger: 'blur' }],\n          name: [{ required: true, message: '接口名称不能为空', trigger: 'blur' }],\n        }\n      }\n    },\n    created() {  //打开界面执行动作\n      this.getList()\n    },\n    methods: {\n      typeIndex(index) {  // 序号\n        return (index + 1) + (this.pageInfo.page - 1) * this.pageInfo.limit\n      },\n      getList() {  //查询分页\n        this.listLoading = true\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\n          this.list = response.data.records\n          this.total = response.data.total\n\n          // Just to simulate the time of the request\n          setTimeout(() => {\n            this.listLoading = false\n          }, 1 * 1000)\n        })\n      },\n      handleFilter() { // 查询过滤\n        this.pageInfo.page = 1\n        this.getList()\n      },\n      handleCreate() {   // 点击新增操作\n        this.resetTemp()\n        this.dialogStatus = 'create'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      createData() {   // 执行后端 新增方法\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            createDictDetail(this.temp).then((res) => {\n              if(res.code==200){\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({ title: '新增', message: '新增成功!', type: 'success', duration: 2000 })\n              }\n            })\n          }\n        })\n      },\n      handleUpdate(row) {  // 点击修改操作\n        this.temp = Object.assign({}, row) // copy obj\n        this.dialogStatus = 'update'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      updateData() {   // 执行后端 修改方法\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            const tempData = Object.assign({}, this.temp)\n            updateDictDetail(tempData).then((res) => {\n              if(res.code==200){\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({ title: '修改', message: '修改成功', type: 'success', duration: 2000 })\n              }\n            })\n          }\n        })\n      },\n      handleDelete(row) { // 执行后端 删除方法\n        this.$confirm('你确定要删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async() => {\n          await deleteDictDetail(row.id)\n          this.getList()\n          this.$message({ type: 'success', message: '删除成功!' })\n        }).catch(() => {\n          this.$message({ type: 'success', message: '已取消删除' })\n        })\n      }\n    }\n  }\n</script>\n"]}]}