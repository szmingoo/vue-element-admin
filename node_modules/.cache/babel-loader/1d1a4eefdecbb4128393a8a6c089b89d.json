{"remainingRequest":"C:\\Users\\86176\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86176\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86176\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86176\\vue-element-admin\\src\\views\\permission\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86176\\vue-element-admin\\src\\views\\permission\\role.vue","mtime":1632644191875},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-button type=\"primary\" @click=\"handleAddRole\">New Role</el-button>\r\n\r\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\r\n      <el-table-column align=\"center\" label=\"Role Key\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.key }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Role Name\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.name }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"Description\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.description }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Operations\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">Edit</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">Delete</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'Edit Role':'New Role'\">\r\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"role.name\" placeholder=\"Role Name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Desc\">\r\n          <el-input\r\n            v-model=\"role.description\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\r\n            type=\"textarea\"\r\n            placeholder=\"Role Description\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Menus\">\r\n          <el-tree\r\n            ref=\"tree\"\r\n            :check-strictly=\"checkStrictly\"\r\n            :data=\"routesData\"\r\n            :props=\"defaultProps\"\r\n            show-checkbox\r\n            node-key=\"path\"\r\n            class=\"permission-tree\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align:right;\">\r\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmRole\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport path from 'path'\r\nimport { deepClone } from '@/utils'\r\nimport { getRoutes, getRoles, addRole, deleteRole, updateRole } from '@/api/role'\r\n\r\nconst defaultRole = {\r\n  key: '',\r\n  name: '',\r\n  description: '',\r\n  routes: []\r\n}\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      role: Object.assign({}, defaultRole),\r\n      routes: [],\r\n      rolesList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'new',\r\n      checkStrictly: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    routesData() {\r\n      return this.routes\r\n    }\r\n  },\r\n  created() {\r\n    // Mock: get all routes and roles list from server\r\n    this.getRoutes()\r\n    this.getRoles()\r\n  },\r\n  methods: {\r\n    async getRoutes() {\r\n      const res = await getRoutes()\r\n      this.serviceRoutes = res.data\r\n      this.routes = this.generateRoutes(res.data)\r\n    },\r\n    async getRoles() {\r\n      const res = await getRoles()\r\n      this.rolesList = res.data\r\n    },\r\n\r\n    // Reshape the routes structure so that it looks the same as the sidebar\r\n    generateRoutes(routes, basePath = '/') {\r\n      const res = []\r\n\r\n      for (let route of routes) {\r\n        // skip some route\r\n        if (route.hidden) { continue }\r\n\r\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\r\n\r\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\r\n          route = onlyOneShowingChild\r\n        }\r\n\r\n        const data = {\r\n          path: path.resolve(basePath, route.path),\r\n          title: route.meta && route.meta.title\r\n\r\n        }\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          data.children = this.generateRoutes(route.children, data.path)\r\n        }\r\n        res.push(data)\r\n      }\r\n      return res\r\n    },\r\n    generateArr(routes) {\r\n      let data = []\r\n      routes.forEach(route => {\r\n        data.push(route)\r\n        if (route.children) {\r\n          const temp = this.generateArr(route.children)\r\n          if (temp.length > 0) {\r\n            data = [...data, ...temp]\r\n          }\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    handleAddRole() {\r\n      this.role = Object.assign({}, defaultRole)\r\n      if (this.$refs.tree) {\r\n        this.$refs.tree.setCheckedNodes([])\r\n      }\r\n      this.dialogType = 'new'\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(scope) {\r\n      this.dialogType = 'edit'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.role = deepClone(scope.row)\r\n      this.$nextTick(() => {\r\n        const routes = this.generateRoutes(this.role.routes)\r\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\r\n        // set checked state of a node not affects its father and child nodes\r\n        this.checkStrictly = false\r\n      })\r\n    },\r\n    handleDelete({ $index, row }) {\r\n      this.$confirm('Confirm to remove the role?', 'Warning', {\r\n        confirmButtonText: 'Confirm',\r\n        cancelButtonText: 'Cancel',\r\n        type: 'warning'\r\n      })\r\n        .then(async() => {\r\n          await deleteRole(row.key)\r\n          this.rolesList.splice($index, 1)\r\n          this.$message({\r\n            type: 'success',\r\n            message: 'Delete succed!'\r\n          })\r\n        })\r\n        .catch(err => { console.error(err) })\r\n    },\r\n    generateTree(routes, basePath = '/', checkedKeys) {\r\n      const res = []\r\n\r\n      for (const route of routes) {\r\n        const routePath = path.resolve(basePath, route.path)\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          route.children = this.generateTree(route.children, routePath, checkedKeys)\r\n        }\r\n\r\n        if (checkedKeys.includes(routePath) || (route.children && route.children.length >= 1)) {\r\n          res.push(route)\r\n        }\r\n      }\r\n      return res\r\n    },\r\n    async confirmRole() {\r\n      const isEdit = this.dialogType === 'edit'\r\n\r\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\r\n      this.role.routes = this.generateTree(deepClone(this.serviceRoutes), '/', checkedKeys)\r\n\r\n      if (isEdit) {\r\n        await updateRole(this.role.key, this.role)\r\n        for (let index = 0; index < this.rolesList.length; index++) {\r\n          if (this.rolesList[index].key === this.role.key) {\r\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\r\n            break\r\n          }\r\n        }\r\n      } else {\r\n        const { data } = await addRole(this.role)\r\n        this.role.key = data.key\r\n        this.rolesList.push(this.role)\r\n      }\r\n\r\n      const { description, key, name } = this.role\r\n      this.dialogVisible = false\r\n      this.$notify({\r\n        title: 'Success',\r\n        dangerouslyUseHTMLString: true,\r\n        message: `\r\n            <div>Role Key: ${key}</div>\r\n            <div>Role Name: ${name}</div>\r\n            <div>Description: ${description}</div>\r\n          `,\r\n        type: 'success'\r\n      })\r\n    },\r\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\r\n    onlyOneShowingChild(children = [], parent) {\r\n      let onlyOneChild = null\r\n      const showingChildren = children.filter(item => !item.hidden)\r\n\r\n      // When there is only one child route, the child route is displayed by default\r\n      if (showingChildren.length === 1) {\r\n        onlyOneChild = showingChildren[0]\r\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\r\n        return onlyOneChild\r\n      }\r\n\r\n      // Show parent if there are no child route to display\r\n      if (showingChildren.length === 0) {\r\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\r\n        return onlyOneChild\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-container {\r\n  .roles-table {\r\n    margin-top: 30px;\r\n  }\r\n  .permission-tree {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/permission"}]}