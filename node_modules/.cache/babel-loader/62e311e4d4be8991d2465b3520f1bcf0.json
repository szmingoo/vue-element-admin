{"remainingRequest":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\vue-element-admin\\src\\views\\test\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\vue-element-admin\\src\\views\\test\\index.vue","mtime":1670141788361},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L2NvZGUvdnVlLWVsZW1lbnQtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGRpY3REZXRhaWxMaXN0LCBhdXRvVGVzdCB9IGZyb20gJ0AvYXBpL2ludGVyZmFjZSc7IC8vIOW8leWFpeiwg+eUqGFwaQoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkb21haW5zOiBbewogICAgICAgIHZhbHVlOiAnJwogICAgICB9XSwKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIHRvdGFsOiAwLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgbGlzdFF1ZXJ5OiB7CiAgICAgICAgbmFtZTogdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIHBhZ2VJbmZvOiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogMTAwCiAgICAgIH0sCiAgICAgIERpYWxvZ1Zpc2libGU6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBkaWN0RGV0YWlsTGlzdCh0aGlzLmxpc3RRdWVyeSwgdGhpcy5wYWdlSW5mbykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5yZWNvcmRzOwogICAgICAgIF90aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbDsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSwgMSAqIDEwMDApOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVGaWx0ZXI6IGZ1bmN0aW9uIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5wYWdlSW5mby5wYWdlID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgcmVzZXRUZW1wOiBmdW5jdGlvbiByZXNldFRlbXAoKSB7CiAgICAgIHRoaXMudGVtcCA9IHsKICAgICAgICBuYW1lOiAnJwogICAgICB9OwogICAgfSwKICAgIGhhbmRsZVRlc3Q6IGZ1bmN0aW9uIGhhbmRsZVRlc3Qocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm56Gu5a6a6Ieq5Yqo5rWL6K+V6K+l5rS75YqoPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICdpbmZvJwogICAgICB9KS50aGVuKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF1dG9UZXN0KHsKICAgICAgICAgICAgICAgICAgImlkIjogcm93LmlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMyLmdldExpc3QoKTsKCiAgICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfnqI3lkI7lsIbkvJrlnKjkvIHkuJrlvq7kv6HnvqTogYrkuK3lj5HpgIHmtYvor5XmiqXlkYrvvIEnCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5rWL6K+VJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBqdW1wOiBmdW5jdGlvbiBqdW1wKHJvdykgewogICAgICB2YXIgUGF0aCA9ICdodHRwOi8vMTIxLjQuMjU0LjE2MC9yZXBvcnQvYXBpZm94LXJlcG9ydC5odG1sJzsKICAgICAgd2luZG93Lm9wZW4oUGF0aCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAA,cAAA,EAAA,QAAA,QAAA,iBAAA,C,CAAA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA;AADA,OAAA,CADA;AAIA,MAAA,QAAA,EAAA,CAJA;AAKA,MAAA,IAAA,EAAA,IALA;AAMA,MAAA,KAAA,EAAA,CANA;AAOA,MAAA,WAAA,EAAA,IAPA;AAQA,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OARA;AAWA,MAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAXA;AAeA,MAAA,aAAA,EAAA;AAfA,KAAA;AAiBA,GAnBA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,OAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,cAAA,CAAA,KAAA,SAAA,EAAA,KAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,SAFA,EAEA,IAAA,IAFA,CAAA;AAGA,OANA;AAOA,KAVA;AAWA,IAAA,YAXA,0BAWA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,OAAA;AACA,KAdA;AAeA,IAAA,SAfA,uBAeA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAGA,KAnBA;AAoBA,IAAA,UApBA,sBAoBA,GApBA,EAoBA;AAAA;;AACA,WAAA,QAAA,CAAA,cAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,uEAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,QAAA,CAAA;AAAA,wBAAA,GAAA,CAAA;AAAA,iBAAA,CADA;;AAAA;AAEA,gBAAA,MAAA,CAAA,OAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,SAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,IAQA,KARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA,OAVA;AAWA,KAhCA;AAiCA,IAAA,IAjCA,gBAiCA,GAjCA,EAiCA;AACA,UAAA,IAAA,GAAA,gDAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA;AApCA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-row>\n        <el-col align=\"left\" :span=\"16\">\n          <el-input v-model=\"listQuery.name\" placeholder=\"活动名称\" style=\"width: 250px; \" size=\"small\"/>\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\"\n                     @click=\"handleFilter\">查询\n          </el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row\n              style=\"width: 100%; margin-top: 10px;\">\n      <el-table-column label=\"序号\" type=\"index\" :index=\"typeIndex\" width=\"100\"  align=\"center\"/>\n      <el-table-column label=\"活动名称\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"执行次数\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.count }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleTest(row)\" plain>执行测试</el-button>\n          <el-button type=\"success\" size=\"small\" @click=\"jump(row)\" plain>查看报告</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\n  import {dictDetailList,autoTest} from '@/api/interface'   // 引入调用api\n  export default {\n    data() {\n      return {\n        domains: [{\n          value: ''\n        }],\n        tableKey: 0,\n        list: null,\n        total: 0,\n        listLoading: true,\n        listQuery: {\n          name: undefined,\n        },\n        pageInfo: {\n          page: 1,\n          limit: 100\n        },\n        DialogVisible: false,\n      }\n    },\n    created() {\n      this.getList()\n    },\n    methods: {\n      getList() {\n        this.listLoading = true\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\n          this.list = response.data.records\n          this.total = response.data.total\n          setTimeout(() => {\n            this.listLoading = false\n          }, 1 * 1000)\n        })\n      },\n      handleFilter() {\n        this.pageInfo.page = 1\n        this.getList()\n      },\n      resetTemp() {\n        this.temp = {\n          name: '',\n        }\n      },\n      handleTest(row) {\n        this.$confirm('是否确定自动测试该活动?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'info',\n        }).then(async () => {\n          await autoTest({\"id\":row.id});\n          this.getList();\n          this.$message({type: 'success', message: '稍后将会在企业微信群聊中发送测试报告！'})\n        }).catch(() => {\n          this.$message({type: 'success', message: '已取消测试'})\n        })\n      },\n      jump (row) {\n        let Path = 'http://121.4.254.160/report/apifox-report.html';\n        window.open(Path)\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views/test"}]}