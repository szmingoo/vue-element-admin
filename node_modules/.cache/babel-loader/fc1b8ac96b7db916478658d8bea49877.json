{"remainingRequest":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\vue-element-admin\\src\\views\\interface\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\code\\vue-element-admin\\src\\views\\interface\\index.vue","mtime":1688379644937},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500371},{"path":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532801399},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500371},{"path":"D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 查询条件 -->\n    <div class=\"filter-container\">\n      <el-row>\n        <el-col align=\"left\" :span=\"8\">\n          <el-button type=\"primary add_btn height32\" icon=\"el-icon-circle-plus-outline\" size=\"small\"\n                     @click=\"handleCreate\">新增\n          </el-button>\n        </el-col>\n        <el-col align=\"right\" :span=\"16\">\n          <el-input v-model=\"listQuery.name\" placeholder=\"接口名称\" style=\"width: 200px; margin-left: 10px;\" size=\"small\"/>\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\"\n                     @click=\"handleFilter\">查询\n          </el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 显示数据列表 -->\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row style=\"width: 100%; margin-top: 10px;\">\n      <el-table-column label=\"序号\" type=\"index\" :index=\"typeIndex\" width=\"50\" />\n      <el-table-column label=\"接口名称\" align=\"center\" show-overflow-tooltip=true>\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"接口地址\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.url }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"请求方法\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.method | statusFilter}}</span></template>\n      </el-table-column>\n      <!--<el-table-column label=\"请求数据\" align=\"center\" show-overflow-tooltip=true>-->\n        <!--<template slot-scope=\"{row}\"><span>{{ row.data}}</span></template>-->\n      <!--</el-table-column>-->\n      <!--<el-table-column label=\"请求头部\" align=\"center\" show-overflow-tooltip=true>-->\n        <!--<template slot-scope=\"{row}\"><span>{{ row.header}}</span></template>-->\n      <!--</el-table-column>-->\n      <el-table-column label=\"发送状态\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.status | statusFilter1}}</span></template>\n      </el-table-column>\n      <el-table-column label=\"备注\" align=\"center\" show-overflow-tooltip=true>\n        <template slot-scope=\"{row}\"><span>{{ row.remark}}</span></template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleUpdate(row)\" plain>编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(row)\" plain>删除</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleSend(row)\" plain>发送</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 页标 -->\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"pageInfo.page\" :limit.sync=\"pageInfo.limit\"\n                @pagination=\"getList\"/>\n    <!-- 新增-修改 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\" width=\"36%\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"接口名称\" prop=\"name\" size=\"small\">\n          <el-input v-model=\"temp.name\" placeholder=\"请输入接口名称\"/>\n        </el-form-item>\n        <el-form-item label=\"接口地址\" prop=\"url\" size=\"small\">\n          <el-input v-model=\"temp.url\" placeholder=\"请输入接口地址\"/>\n        </el-form-item>\n        <el-form-item label=\"请求头部\" size=\"small\" prop=\"header\">\n          <el-input v-model=\"temp.header\" placeholder=\"请输入请求头部\"/>\n        </el-form-item>\n        <el-form-item label=\"请求方法\" prop=\"method\">\n          <el-select v-model=\"temp.method\" class=\"filter-item\" placeholder=\"请选择请求方法\" style=\"width:100%\" size=\"small\">\n            <el-option v-for=\"item in selectOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"请求数据\" size=\"small\" prop=\"data\">\n          <el-input v-model=\"temp.data\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\"/>\n        </el-form-item>\n        <el-form-item label=\"备注\" size=\"small\" prop=\"data\">\n          <el-input v-model=\"temp.remark\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" size=\"small\" @click=\"dialogStatus==='create'?createData():updateData()\">保存</el-button>\n        <el-button size=\"small\" @click=\"dialogFormVisible = false\">关闭</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import {dictDetailList, createDictDetail, updateDictDetail, deleteDictDetail,sendDictDetail} from '@/api/interface'   // 引入调用api\n  import Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\n  const selectOptions = [\n    {key: 0, display_name: 'put'},\n    {key: 1, display_name: 'get'},\n    {key: 2, display_name: 'post'},\n    {key: 3, display_name: 'delete'},\n  ]\n  const statusTypeKeyValue = selectOptions.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name\n    return acc\n  }, {})\n\n  const selectOptions1 = [\n    {key: 0, display_name: '未发送'},\n    {key: 1, display_name: '已发送成功'},\n    {key: 2, display_name: '已发送失败'},\n  ]\n  const statusTypeKeyValue1 = selectOptions1.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name\n    return acc\n  }, {})\n\n  export default {\n    components: {Pagination},  // 分页\n    filters: {\n      statusFilter(type) {    // 类似map\n        return statusTypeKeyValue[type]\n      },\n      statusFilter1(type) {    // 类似map\n        return statusTypeKeyValue1[type]\n      }\n    },\n    data() {\n      return {\n        tableKey: 0,\n        list: null,   // table list\n        total: 0,\t\t// 总数\n        listLoading: true, // 懒加载\n        listQuery: {   //查询条件\n          name: undefined,\n        },\n        pageInfo: {   //分页对象\n          page: 1,\n          limit: 10\n        },\n        selectOptions, //状态\n        selectOptions1, //状态\n        temp: {  //新增/修改temp\n          id: undefined,\n          name: '',\n          url: '',\n          data: '',\n          method: '',\n          header: '',\n          remark:'',\n          status:''\n        },\n        dialogFormVisible: false,  //新增修改弹出框\n        dialogStatus: '',\t  //弹出框 显示隐藏控制\n        textMap: {\n          update: '修改',\n          create: '新增'\n        },\n        rules: {    //新增修改保存时 校验规则\n          url: [{required: true, message: '接口地址不能为空', trigger: 'blur'}],\n          data: [{required: true, message: '请求数据不能为空', trigger: 'blur'}],\n          method: [{required: true, message: '请选择方法', trigger: 'change'}],\n          header: [{required: true, message: '请求头部不能为空', trigger: 'blur'}],\n          name: [{required: true, message: '接口名称不能为空', trigger: 'blur'}],\n        }\n      }\n    },\n    created() {  //打开界面执行动作\n      this.getList()\n    },\n    methods: {\n      getList() {  //查询分页\n        this.listLoading = true\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\n          this.list = response.data.records\n          this.total = response.data.total\n          setTimeout(() => {\n            this.listLoading = false\n          }, 1 * 1000)\n        })\n      },\n      handleFilter() { // 查询过滤\n        this.pageInfo.page = 1\n        this.getList()\n      },\n      resetTemp() {   // 重置 表单\n        this.temp = {\n          id: undefined,\n          name: '',\n          url: '',\n          data: '',\n          method: '',\n          header: '',\n          response:'',\n          remark:'',\n          status:''\n        }\n      },\n      handleCreate() {   // 点击新增操作\n        this.resetTemp()\n        this.dialogStatus = 'create'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      createData() {   // 执行后端 新增方法\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            // const tempData = Object.assign({}, this.temp)\n            // var params = new URLSearchParams()\n            // params=tempData\n            createDictDetail(this.temp).then((res) => {\n              if (res.code == 200) {\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({title: '新增', message: '新增成功!', type: 'success', duration: 2000})\n              }\n            })\n          }\n        })\n      },\n      handleUpdate(row) {  // 点击修改操作\n        this.temp = Object.assign({}, row) // copy obj\n        this.dialogStatus = 'update'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      updateData() {   // 执行后端 修改方法\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            // const tempData = Object.assign({}, this.temp)\n            // var params = new URLSearchParams()\n            // params=tempData\n            updateDictDetail(this.temp).then((res) => {\n              if (res.code == 200) {\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({title: '修改', message: '修改成功', type: 'success', duration: 2000})\n              }\n            })\n          }\n        })\n      },\n      handleDelete(row) { // 执行后端 删除方法\n        this.$confirm('你确定要删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          await deleteDictDetail({'id':row.id})\n          this.getList()\n          this.$message({type: 'success', message: '删除成功!'})\n        }).catch(() => {\n          // this.$message({type: 'success', message: '已取消删除'})\n        })\n      },\n      handleSend(row){\n        this.$confirm('你确定要发送该请求, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          await sendDictDetail({'id':row.id});\n          this.getList();\n          this.$message({type: 'success', message: '发送成功!'})\n        }).catch(() => {\n          // this.$message({type: 'success', message: '已取消发送'})\n        })\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views/interface"}]}