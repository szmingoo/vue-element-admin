{"remainingRequest":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\vue-element-admin\\src\\views\\interface\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\vue-element-admin\\src\\views\\interface\\index.vue","mtime":1670579279272},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA,SAAA,cAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,cAAA,QAAA,iBAAA,C,CAAA;;AACA,OAAA,UAAA,MAAA,yBAAA,C,CAAA;;AAEA,IAAA,aAAA,GAAA,CACA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CADA,EAEA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CAFA,EAGA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CAHA,EAIA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CAJA,CAAA;AAMA,IAAA,kBAAA,GAAA,aAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,EAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,YAAA;AACA,SAAA,GAAA;AACA,CAHA,EAGA,EAHA,CAAA;AAKA,IAAA,cAAA,GAAA,CACA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CADA,EAEA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CAFA,EAGA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA;AAAA,CAHA,CAAA;AAKA,IAAA,mBAAA,GAAA,cAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,EAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,YAAA;AACA,SAAA,GAAA;AACA,CAHA,EAGA,EAHA,CAAA;AAKA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GADA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,IADA,EACA;AAAA;AACA,aAAA,kBAAA,CAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,aAJA,yBAIA,IAJA,EAIA;AAAA;AACA,aAAA,mBAAA,CAAA,IAAA,CAAA;AACA;AANA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAEA;AACA,MAAA,KAAA,EAAA,CAHA;AAGA;AACA,MAAA,WAAA,EAAA,IAJA;AAIA;AACA,MAAA,SAAA,EAAA;AAAA;AACA,QAAA,IAAA,EAAA;AADA,OALA;AAQA,MAAA,QAAA,EAAA;AAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OARA;AAYA,MAAA,aAAA,EAAA,aAZA;AAYA;AACA,MAAA,cAAA,EAAA,cAbA;AAaA;AACA,MAAA,IAAA,EAAA;AAAA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,MAAA,EAAA,EALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,MAAA,EAAA,EAPA;AAQA,QAAA,MAAA,EAAA;AARA,OAdA;AAwBA,MAAA,iBAAA,EAAA,KAxBA;AAwBA;AACA,MAAA,YAAA,EAAA,EAzBA;AAyBA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,MAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA;AAFA,OA1BA;AA8BA,MAAA,KAAA,EAAA;AAAA;AACA,QAAA,GAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CADA;AAEA,QAAA,IAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAFA;AAGA,QAAA,MAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAHA;AAIA,QAAA,MAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAJA;AAKA,QAAA,IAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AALA;AA9BA,KAAA;AAsCA,GAjDA;AAkDA,EAAA,OAlDA,qBAkDA;AAAA;AACA,SAAA,OAAA;AACA,GApDA;AAqDA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,cAAA,CAAA,KAAA,SAAA,EAAA,KAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,SAFA,EAEA,IAAA,IAFA,CAAA;AAGA,OANA;AAOA,KAVA;AAWA,IAAA,YAXA,0BAWA;AAAA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,OAAA;AACA,KAdA;AAeA,IAAA,SAfA,uBAeA;AAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,MAAA,EAAA,EALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,QAAA,EAAA,EAPA;AAQA,QAAA,MAAA,EAAA,EARA;AASA,QAAA,MAAA,EAAA;AATA,OAAA;AAWA,KA3BA;AA4BA,IAAA,YA5BA,0BA4BA;AAAA;;AAAA;AACA,WAAA,SAAA;AACA,WAAA,YAAA,GAAA,QAAA;AACA,WAAA,iBAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,aAAA;AACA,OAFA;AAGA,KAnCA;AAoCA,IAAA,UApCA,wBAoCA;AAAA;;AAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA;AACA;AACA;AACA,UAAA,gBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,iBAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,OAAA,CAAA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,OAAA,EAAA,OAAA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,QAAA,EAAA;AAAA,eAAA;AACA;AACA,WANA;AAOA;AACA,OAbA;AAcA,KAnDA;AAoDA,IAAA,YApDA,wBAoDA,GApDA,EAoDA;AAAA;;AAAA;AACA,WAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CADA,CACA;;AACA,WAAA,YAAA,GAAA,QAAA;AACA,WAAA,iBAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,aAAA;AACA,OAFA;AAGA,KA3DA;AA4DA,IAAA,UA5DA,wBA4DA;AAAA;;AAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA;AACA;AACA;AACA,UAAA,gBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,iBAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,OAAA,CAAA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,OAAA,EAAA,MAAA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,QAAA,EAAA;AAAA,eAAA;AACA;AACA,WANA;AAOA;AACA,OAbA;AAcA,KA3EA;AA4EA,IAAA,YA5EA,wBA4EA,GA5EA,EA4EA;AAAA;;AAAA;AACA,WAAA,QAAA,CAAA,kBAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,uEAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,gBAAA,CAAA;AAAA,wBAAA,GAAA,CAAA;AAAA,iBAAA,CADA;;AAAA;AAEA,gBAAA,MAAA,CAAA,OAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,SAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,IAQA,KARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA,OAVA;AAWA,KAxFA;AAyFA,IAAA,UAzFA,sBAyFA,GAzFA,EAyFA;AAAA;;AACA,WAAA,QAAA,CAAA,kBAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,uEAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,cAAA,CAAA;AAAA,wBAAA,GAAA,CAAA;AAAA,iBAAA,CADA;;AAAA;AAEA,gBAAA,MAAA,CAAA,OAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,SAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,IAQA,KARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA,OAVA;AAWA;AArGA;AArDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 查询条件 -->\r\n    <div class=\"filter-container\">\r\n      <el-row>\r\n        <el-col align=\"left\" :span=\"8\">\r\n          <el-button type=\"primary add_btn height32\" icon=\"el-icon-circle-plus-outline\" size=\"small\"\r\n                     @click=\"handleCreate\">新增\r\n          </el-button>\r\n        </el-col>\r\n        <el-col align=\"right\" :span=\"16\">\r\n          <el-input v-model=\"listQuery.name\" placeholder=\"接口名称\" style=\"width: 200px; margin-left: 10px;\" size=\"small\"/>\r\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\"\r\n                     @click=\"handleFilter\">查询\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    <!-- 显示数据列表 -->\r\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row style=\"width: 100%; margin-top: 10px;\">\r\n      <el-table-column label=\"序号\" type=\"index\" :index=\"typeIndex\" width=\"50\" />\r\n      <el-table-column label=\"接口名称\" align=\"center\" show-overflow-tooltip=true>\r\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\r\n      </el-table-column>\r\n      <el-table-column label=\"接口地址\" align=\"center\">\r\n        <template slot-scope=\"{row}\"><span>{{ row.url }}</span></template>\r\n      </el-table-column>\r\n      <el-table-column label=\"请求方法\" align=\"center\">\r\n        <template slot-scope=\"{row}\"><span>{{ row.method | statusFilter}}</span></template>\r\n      </el-table-column>\r\n      <!--<el-table-column label=\"请求数据\" align=\"center\" show-overflow-tooltip=true>-->\r\n        <!--<template slot-scope=\"{row}\"><span>{{ row.data}}</span></template>-->\r\n      <!--</el-table-column>-->\r\n      <!--<el-table-column label=\"请求头部\" align=\"center\" show-overflow-tooltip=true>-->\r\n        <!--<template slot-scope=\"{row}\"><span>{{ row.header}}</span></template>-->\r\n      <!--</el-table-column>-->\r\n      <el-table-column label=\"发送状态\" align=\"center\">\r\n        <template slot-scope=\"{row}\"><span>{{ row.status | statusFilter1}}</span></template>\r\n      </el-table-column>\r\n      <el-table-column label=\"备注\" align=\"center\" show-overflow-tooltip=true>\r\n        <template slot-scope=\"{row}\"><span>{{ row.remark}}</span></template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleUpdate(row)\" plain>编辑</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(row)\" plain>删除</el-button>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleSend(row)\" plain>发送</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 页标 -->\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"pageInfo.page\" :limit.sync=\"pageInfo.limit\"\r\n                @pagination=\"getList\"/>\r\n    <!-- 新增-修改 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\" width=\"36%\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\r\n        <el-form-item label=\"接口名称\" prop=\"name\" size=\"small\">\r\n          <el-input v-model=\"temp.name\" placeholder=\"请输入接口名称\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"接口地址\" prop=\"url\" size=\"small\">\r\n          <el-input v-model=\"temp.url\" placeholder=\"请输入接口地址\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求头部\" size=\"small\" prop=\"header\">\r\n          <el-input v-model=\"temp.header\" placeholder=\"请输入请求头部\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求方法\" prop=\"method\">\r\n          <el-select v-model=\"temp.method\" class=\"filter-item\" placeholder=\"请选择请求方法\" style=\"width:100%\" size=\"small\">\r\n            <el-option v-for=\"item in selectOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求数据\" size=\"small\" prop=\"data\">\r\n          <el-input v-model=\"temp.data\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" size=\"small\" prop=\"data\">\r\n          <el-input v-model=\"temp.remark\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" size=\"small\" @click=\"dialogStatus==='create'?createData():updateData()\">保存</el-button>\r\n        <el-button size=\"small\" @click=\"dialogFormVisible = false\">关闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {dictDetailList, createDictDetail, updateDictDetail, deleteDictDetail,sendDictDetail} from '@/api/interface'   // 引入调用api\r\n  import Pagination from '@/components/Pagination' // secondary package based on el-pagination\r\n\r\n  const selectOptions = [\r\n    {key: 0, display_name: 'put'},\r\n    {key: 1, display_name: 'get'},\r\n    {key: 2, display_name: 'post'},\r\n    {key: 3, display_name: 'delete'},\r\n  ]\r\n  const statusTypeKeyValue = selectOptions.reduce((acc, cur) => {\r\n    acc[cur.key] = cur.display_name\r\n    return acc\r\n  }, {})\r\n\r\n  const selectOptions1 = [\r\n    {key: 0, display_name: '未发送'},\r\n    {key: 1, display_name: '已发送成功'},\r\n    {key: 2, display_name: '已发送失败'},\r\n  ]\r\n  const statusTypeKeyValue1 = selectOptions1.reduce((acc, cur) => {\r\n    acc[cur.key] = cur.display_name\r\n    return acc\r\n  }, {})\r\n\r\n  export default {\r\n    components: {Pagination},  // 分页\r\n    filters: {\r\n      statusFilter(type) {    // 类似map\r\n        return statusTypeKeyValue[type]\r\n      },\r\n      statusFilter1(type) {    // 类似map\r\n        return statusTypeKeyValue1[type]\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        tableKey: 0,\r\n        list: null,   // table list\r\n        total: 0,\t\t// 总数\r\n        listLoading: true, // 懒加载\r\n        listQuery: {   //查询条件\r\n          name: undefined,\r\n        },\r\n        pageInfo: {   //分页对象\r\n          page: 1,\r\n          limit: 10\r\n        },\r\n        selectOptions, //状态\r\n        selectOptions1, //状态\r\n        temp: {  //新增/修改temp\r\n          id: undefined,\r\n          name: '',\r\n          url: '',\r\n          data: '',\r\n          method: '',\r\n          header: '',\r\n          remark:'',\r\n          status:''\r\n        },\r\n        dialogFormVisible: false,  //新增修改弹出框\r\n        dialogStatus: '',\t  //弹出框 显示隐藏控制\r\n        textMap: {\r\n          update: '修改',\r\n          create: '新增'\r\n        },\r\n        rules: {    //新增修改保存时 校验规则\r\n          url: [{required: true, message: '接口地址不能为空', trigger: 'blur'}],\r\n          data: [{required: true, message: '请求数据不能为空', trigger: 'blur'}],\r\n          method: [{required: true, message: '请选择方法', trigger: 'change'}],\r\n          header: [{required: true, message: '请求头部不能为空', trigger: 'blur'}],\r\n          name: [{required: true, message: '接口名称不能为空', trigger: 'blur'}],\r\n        }\r\n      }\r\n    },\r\n    created() {  //打开界面执行动作\r\n      this.getList()\r\n    },\r\n    methods: {\r\n      getList() {  //查询分页\r\n        this.listLoading = true\r\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\r\n          this.list = response.data.records\r\n          this.total = response.data.total\r\n          setTimeout(() => {\r\n            this.listLoading = false\r\n          }, 1 * 1000)\r\n        })\r\n      },\r\n      handleFilter() { // 查询过滤\r\n        this.pageInfo.page = 1\r\n        this.getList()\r\n      },\r\n      resetTemp() {   // 重置 表单\r\n        this.temp = {\r\n          id: undefined,\r\n          name: '',\r\n          url: '',\r\n          data: '',\r\n          method: '',\r\n          header: '',\r\n          response:'',\r\n          remark:'',\r\n          status:''\r\n        }\r\n      },\r\n      handleCreate() {   // 点击新增操作\r\n        this.resetTemp()\r\n        this.dialogStatus = 'create'\r\n        this.dialogFormVisible = true\r\n        this.$nextTick(() => {\r\n          this.$refs['dataForm'].clearValidate()\r\n        })\r\n      },\r\n      createData() {   // 执行后端 新增方法\r\n        this.$refs['dataForm'].validate((valid) => {\r\n          if (valid) {\r\n            // const tempData = Object.assign({}, this.temp)\r\n            // var params = new URLSearchParams()\r\n            // params=tempData\r\n            createDictDetail(this.temp).then((res) => {\r\n              if (res.code == 200) {\r\n                this.dialogFormVisible = false\r\n                this.getList()\r\n                this.$notify({title: '新增', message: '新增成功!', type: 'success', duration: 2000})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleUpdate(row) {  // 点击修改操作\r\n        this.temp = Object.assign({}, row) // copy obj\r\n        this.dialogStatus = 'update'\r\n        this.dialogFormVisible = true\r\n        this.$nextTick(() => {\r\n          this.$refs['dataForm'].clearValidate()\r\n        })\r\n      },\r\n      updateData() {   // 执行后端 修改方法\r\n        this.$refs['dataForm'].validate((valid) => {\r\n          if (valid) {\r\n            // const tempData = Object.assign({}, this.temp)\r\n            // var params = new URLSearchParams()\r\n            // params=tempData\r\n            updateDictDetail(this.temp).then((res) => {\r\n              if (res.code == 200) {\r\n                this.dialogFormVisible = false\r\n                this.getList()\r\n                this.$notify({title: '修改', message: '修改成功', type: 'success', duration: 2000})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleDelete(row) { // 执行后端 删除方法\r\n        this.$confirm('你确定要删除该信息, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          await deleteDictDetail({'id':row.id})\r\n          this.getList()\r\n          this.$message({type: 'success', message: '删除成功!'})\r\n        }).catch(() => {\r\n          this.$message({type: 'success', message: '已取消删除'})\r\n        })\r\n      },\r\n      handleSend(row){\r\n        this.$confirm('你确定要发送该请求, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          await sendDictDetail({'id':row.id});\r\n          this.getList();\r\n          this.$message({type: 'success', message: '发送成功!'})\r\n        }).catch(() => {\r\n          this.$message({type: 'success', message: '已取消发送'})\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/interface"}]}