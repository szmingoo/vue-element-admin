{"remainingRequest":"C:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\code\\vue-element-admin\\src\\views\\test\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\code\\vue-element-admin\\src\\views\\test\\index.vue","mtime":1637936283772},{"path":"C:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\code\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\code\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\code\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-row>\n        <el-col align=\"left\" :span=\"8\">\n          <el-button type=\"primary add_btn height32\" icon=\"el-icon-circle-plus-outline\" size=\"small\"\n                     @click=\"handleCreate\">新增\n          </el-button>\n        </el-col>\n        <el-col align=\"right\" :span=\"16\">\n          <el-input v-model=\"listQuery.name\" placeholder=\"接口名称\" style=\"width: 200px; margin-left: 10px;\" size=\"small\"/>\n          <el-button type=\"primary\" class=\"height32\" icon=\"el-icon-search\" style=\"margin-left: 10px;\" size=\"small\"\n                     @click=\"handleFilter\">查询\n          </el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <el-table size=\"small\" :key=\"tableKey\" v-loading=\"listLoading\" :data=\"list\" border fit highlight-current-row\n              style=\"width: 100%; margin-top: 10px;\">\n      <el-table-column label=\"序号\" type=\"index\" :index=\"typeIndex\" width=\"50\" />\n      <el-table-column label=\"名称\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"次数\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.name }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"状态\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.data}}</span></template>\n      </el-table-column>\n      <el-table-column label=\"备注\" align=\"center\">\n        <template slot-scope=\"{row}\"><span>{{ row.url }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleUpdate(row)\" plain>编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(row)\" plain>删除</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleDelete(row)\" plain>发送</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"pageInfo.page\" :limit.sync=\"pageInfo.limit\" @pagination=\"getList\"/>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\" width=\"28%\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"60px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"名称\" prop=\"name\" size=\"small\">\n          <el-input v-model=\"temp.name\" placeholder=\"请输入接口名称\"/>\n        </el-form-item>\n        <el-form-item label=\"接口\" prop=\"url\" size=\"small\">\n          <el-select v-model=\"temp.method\" class=\"filter-item\" placeholder=\"请选择接口\" style=\"width:100%\" size=\"small\">\n            <el-option v-for=\"item in selectOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item v-for=\"(domain, index) in domains\" :label=\"'参数'\" :key=\"domain.key\" :prop=\"'domains.' + index + '.value'\" :rules=\"{required: true, message: '参数不能为空', trigger: 'blur'}\">\n          <el-select v-model=\"temp.method\" class=\"filter-item\" placeholder=\"请选择参数\" style=\"width:95%\" size=\"small\">\n            <el-option v-for=\"item in selectOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\"/>\n          </el-select>\n          <el-input v-model=\"domain.value\" style=\"width:95%\" placeholder=\"请输入参数的值\"></el-input>\n          <span class=\"el-icon-remove-outline\" style=\"margin-left: 0px;font-size: 15px;\" @click.prevent=\"removeDomain(domain)\"></span>\n        </el-form-item>\n        <el-form-item label=\"备注\" size=\"small\" prop=\"data\">\n          <el-input v-model=\"temp.data\" :autosize=\"{ minRows: 4, maxRows: 6}\" type=\"textarea\" placeholder=\"请输入请求数据\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" size=\"small\" @click=\"addDomain\">新增参数</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"dialogStatus==='create'?createData():updateData()\">保存</el-button>\n        <el-button size=\"small\" @click=\"dialogFormVisible = false\">关闭</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import {dictDetailList, createDictDetail, updateDictDetail, deleteDictDetail} from '@/api/interface'   // 引入调用api\n  import Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\n  const selectOptions = [\n    {key: 0, display_name: 'put'},\n    {key: 1, display_name: 'get'},\n    {key: 2, display_name: 'post'},\n    {key: 3, display_name: 'delete'},\n  ]\n  const statusTypeKeyValue = selectOptions.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name\n    return acc\n  }, {})\n\n  export default {\n    components: {Pagination},\n    filters: {\n      statusFilter(type) {\n        return statusTypeKeyValue[type]\n      }\n    },\n    data() {\n      return {\n        domains: [{\n          value: ''\n        }],\n        tableKey: 0,\n        list: null,\n        total: 0,\n        listLoading: true,\n        listQuery: {\n          name: undefined,\n        },\n        pageInfo: {\n          page: 1,\n          limit: 10\n        },\n        selectOptions,\n        temp: {\n          id: undefined,\n          name: '',\n          url: '',\n          data: '',\n          method: ''\n        },\n        dialogFormVisible: false,\n        dialogStatus: '',\n        textMap: {\n          update: '修改',\n          create: '新增'\n        },\n        rules: {\n          url: [{required: true, message: '接口地址不能为空', trigger: 'blur'}],\n          data: [{required: true, message: '请求数据不能为空', trigger: 'blur'}],\n          method: [{required: true, message: '请选择方法', trigger: 'change'}],\n          name: [{required: true, message: '接口名称不能为空', trigger: 'blur'}],\n        }\n      }\n    },\n    created() {\n      this.getList()\n    },\n    methods: {\n      removeDomain(item) {\n        var index = this.domains.indexOf(item)\n        if (index !== -1) {\n          this.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.domains.push({\n          value: '',\n          key: Date.now()\n        });\n      },\n      getList() {\n        this.listLoading = true\n        dictDetailList(this.listQuery, this.pageInfo).then(response => {\n          this.list = response.data.records\n          this.total = response.data.total\n          setTimeout(() => {\n            this.listLoading = false\n          }, 1 * 1000)\n        })\n      },\n      handleFilter() {\n        this.pageInfo.page = 1\n        this.getList()\n      },\n      resetTemp() {\n        this.temp = {\n          id: undefined,\n          name: '',\n          url: '',\n          data: '',\n          method: ''\n        }\n      },\n      handleCreate() {\n        this.resetTemp()\n        this.dialogStatus = 'create'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      createData() {\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            createDictDetail(this.temp).then((res) => {\n              if (res.code == 200) {\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({title: '新增', message: '新增成功!', type: 'success', duration: 2000})\n              }\n            })\n          }\n        })\n      },\n      handleUpdate(row) {\n        this.temp = Object.assign({}, row)\n        this.dialogStatus = 'update'\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      },\n      updateData() {\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            const tempData = Object.assign({}, this.temp)\n            var params = new URLSearchParams()\n            params=tempData\n            updateDictDetail(params).then((res) => {\n              if (res.code == 200) {\n                this.dialogFormVisible = false\n                this.getList()\n                this.$notify({title: '修改', message: '修改成功', type: 'success', duration: 2000})\n              }\n            })\n          }\n        })\n      },\n      handleDelete(row) {\n        this.$confirm('你确定要删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          await deleteDictDetail(row.id)\n          this.getList()\n          this.$message({type: 'success', message: '删除成功!'})\n        }).catch(() => {\n          this.$message({type: 'success', message: '已取消删除'})\n        })\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views/test"}]}