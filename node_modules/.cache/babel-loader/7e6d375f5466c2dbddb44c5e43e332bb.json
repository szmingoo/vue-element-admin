{"remainingRequest":"C:\\Users\\86176\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\86176\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86176\\vue-element-admin\\mock\\article.js","dependencies":[{"path":"C:\\Users\\86176\\vue-element-admin\\mock\\article.js","mtime":1632644191684},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86176\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyID0gcmVxdWlyZSgiQzovVXNlcnMvODYxNzYvdnVlLWVsZW1lbnQtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIpLmRlZmF1bHQ7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwoKdmFyIE1vY2sgPSByZXF1aXJlKCdtb2NranMnKTsKCnZhciBMaXN0ID0gW107CnZhciBjb3VudCA9IDEwMDsKdmFyIGJhc2VDb250ZW50ID0gJzxwPkkgYW0gdGVzdGluZyBkYXRhLCBJIGFtIHRlc3RpbmcgZGF0YS48L3A+PHA+PGltZyBzcmM9Imh0dHBzOi8vd3BpbWcud2FsbHN0Y24uY29tLzRjNjkwMDljLTBmZDQtNDE1My1iMTEyLTZjYjUzZDFjZjk0MyI+PC9wPic7CnZhciBpbWFnZV91cmkgPSAnaHR0cHM6Ly93cGltZy53YWxsc3Rjbi5jb20vZTQ1NTgwODYtNjMxYy00MjVjLTk0MzAtNTZmZmI0NmU3MGIzJzsKCmZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykgewogIExpc3QucHVzaChNb2NrLm1vY2soewogICAgaWQ6ICdAaW5jcmVtZW50JywKICAgIHRpbWVzdGFtcDogK01vY2suUmFuZG9tLmRhdGUoJ1QnKSwKICAgIGF1dGhvcjogJ0BmaXJzdCcsCiAgICByZXZpZXdlcjogJ0BmaXJzdCcsCiAgICB0aXRsZTogJ0B0aXRsZSg1LCAxMCknLAogICAgY29udGVudF9zaG9ydDogJ21vY2sgZGF0YScsCiAgICBjb250ZW50OiBiYXNlQ29udGVudCwKICAgIGZvcmVjYXN0OiAnQGZsb2F0KDAsIDEwMCwgMiwgMiknLAogICAgaW1wb3J0YW5jZTogJ0BpbnRlZ2VyKDEsIDMpJywKICAgICd0eXBlfDEnOiBbJ0NOJywgJ1VTJywgJ0pQJywgJ0VVJ10sCiAgICAnc3RhdHVzfDEnOiBbJ3B1Ymxpc2hlZCcsICdkcmFmdCddLAogICAgZGlzcGxheV90aW1lOiAnQGRhdGV0aW1lJywKICAgIGNvbW1lbnRfZGlzYWJsZWQ6IHRydWUsCiAgICBwYWdldmlld3M6ICdAaW50ZWdlcigzMDAsIDUwMDApJywKICAgIGltYWdlX3VyaTogaW1hZ2VfdXJpLAogICAgcGxhdGZvcm1zOiBbJ2EtcGxhdGZvcm0nXQogIH0pKTsKfQoKbW9kdWxlLmV4cG9ydHMgPSBbewogIHVybDogJy92dWUtZWxlbWVudC1hZG1pbi9hcnRpY2xlL2xpc3QnLAogIHR5cGU6ICdnZXQnLAogIHJlc3BvbnNlOiBmdW5jdGlvbiByZXNwb25zZShjb25maWcpIHsKICAgIHZhciBfY29uZmlnJHF1ZXJ5ID0gY29uZmlnLnF1ZXJ5LAogICAgICAgIGltcG9ydGFuY2UgPSBfY29uZmlnJHF1ZXJ5LmltcG9ydGFuY2UsCiAgICAgICAgdHlwZSA9IF9jb25maWckcXVlcnkudHlwZSwKICAgICAgICB0aXRsZSA9IF9jb25maWckcXVlcnkudGl0bGUsCiAgICAgICAgX2NvbmZpZyRxdWVyeSRwYWdlID0gX2NvbmZpZyRxdWVyeS5wYWdlLAogICAgICAgIHBhZ2UgPSBfY29uZmlnJHF1ZXJ5JHBhZ2UgPT09IHZvaWQgMCA/IDEgOiBfY29uZmlnJHF1ZXJ5JHBhZ2UsCiAgICAgICAgX2NvbmZpZyRxdWVyeSRsaW1pdCA9IF9jb25maWckcXVlcnkubGltaXQsCiAgICAgICAgbGltaXQgPSBfY29uZmlnJHF1ZXJ5JGxpbWl0ID09PSB2b2lkIDAgPyAyMCA6IF9jb25maWckcXVlcnkkbGltaXQsCiAgICAgICAgc29ydCA9IF9jb25maWckcXVlcnkuc29ydDsKICAgIHZhciBtb2NrTGlzdCA9IExpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIGlmIChpbXBvcnRhbmNlICYmIGl0ZW0uaW1wb3J0YW5jZSAhPT0gK2ltcG9ydGFuY2UpIHJldHVybiBmYWxzZTsKICAgICAgaWYgKHR5cGUgJiYgaXRlbS50eXBlICE9PSB0eXBlKSByZXR1cm4gZmFsc2U7CiAgICAgIGlmICh0aXRsZSAmJiBpdGVtLnRpdGxlLmluZGV4T2YodGl0bGUpIDwgMCkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwoKICAgIGlmIChzb3J0ID09PSAnLWlkJykgewogICAgICBtb2NrTGlzdCA9IG1vY2tMaXN0LnJldmVyc2UoKTsKICAgIH0KCiAgICB2YXIgcGFnZUxpc3QgPSBtb2NrTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgIHJldHVybiBpbmRleCA8IGxpbWl0ICogcGFnZSAmJiBpbmRleCA+PSBsaW1pdCAqIChwYWdlIC0gMSk7CiAgICB9KTsKICAgIHJldHVybiB7CiAgICAgIGNvZGU6IDIwMDAwLAogICAgICBkYXRhOiB7CiAgICAgICAgdG90YWw6IG1vY2tMaXN0Lmxlbmd0aCwKICAgICAgICBpdGVtczogcGFnZUxpc3QKICAgICAgfQogICAgfTsKICB9Cn0sIHsKICB1cmw6ICcvdnVlLWVsZW1lbnQtYWRtaW4vYXJ0aWNsZS9kZXRhaWwnLAogIHR5cGU6ICdnZXQnLAogIHJlc3BvbnNlOiBmdW5jdGlvbiByZXNwb25zZShjb25maWcpIHsKICAgIHZhciBpZCA9IGNvbmZpZy5xdWVyeS5pZDsKCiAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoTGlzdCksCiAgICAgICAgX3N0ZXA7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgYXJ0aWNsZSA9IF9zdGVwLnZhbHVlOwoKICAgICAgICBpZiAoYXJ0aWNsZS5pZCA9PT0gK2lkKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjb2RlOiAyMDAwMCwKICAgICAgICAgICAgZGF0YTogYXJ0aWNsZQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KICB9Cn0sIHsKICB1cmw6ICcvdnVlLWVsZW1lbnQtYWRtaW4vYXJ0aWNsZS9wdicsCiAgdHlwZTogJ2dldCcsCiAgcmVzcG9uc2U6IGZ1bmN0aW9uIHJlc3BvbnNlKF8pIHsKICAgIHJldHVybiB7CiAgICAgIGNvZGU6IDIwMDAwLAogICAgICBkYXRhOiB7CiAgICAgICAgcHZEYXRhOiBbewogICAgICAgICAga2V5OiAnUEMnLAogICAgICAgICAgcHY6IDEwMjQKICAgICAgICB9LCB7CiAgICAgICAgICBrZXk6ICdtb2JpbGUnLAogICAgICAgICAgcHY6IDEwMjQKICAgICAgICB9LCB7CiAgICAgICAgICBrZXk6ICdpb3MnLAogICAgICAgICAgcHY6IDEwMjQKICAgICAgICB9LCB7CiAgICAgICAgICBrZXk6ICdhbmRyb2lkJywKICAgICAgICAgIHB2OiAxMDI0CiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9Cn0sIHsKICB1cmw6ICcvdnVlLWVsZW1lbnQtYWRtaW4vYXJ0aWNsZS9jcmVhdGUnLAogIHR5cGU6ICdwb3N0JywKICByZXNwb25zZTogZnVuY3Rpb24gcmVzcG9uc2UoXykgewogICAgcmV0dXJuIHsKICAgICAgY29kZTogMjAwMDAsCiAgICAgIGRhdGE6ICdzdWNjZXNzJwogICAgfTsKICB9Cn0sIHsKICB1cmw6ICcvdnVlLWVsZW1lbnQtYWRtaW4vYXJ0aWNsZS91cGRhdGUnLAogIHR5cGU6ICdwb3N0JywKICByZXNwb25zZTogZnVuY3Rpb24gcmVzcG9uc2UoXykgewogICAgcmV0dXJuIHsKICAgICAgY29kZTogMjAwMDAsCiAgICAgIGRhdGE6ICdzdWNjZXNzJwogICAgfTsKICB9Cn1dOw=="},null]}